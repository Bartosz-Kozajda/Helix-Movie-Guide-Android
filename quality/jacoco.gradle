apply plugin: 'jacoco'

jacoco {
    toolVersion = "$rootProject.ext.quality.jacoco"
}

task codeCoverageReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports..."
    classDirectories = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug",
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/*$ViewBinder*.*',
                       '**/*Config.*',
                       '**/Manifest*.*',
                       '**/*Injector*.*',
                       '**/*App*.*',
                       '**/*Activity*.*',
                       '**/*Adapter.*',
                       '**/*ViewHolder.*',
                       '**/*Module.*',
                       '**/*Binder.*',
                       '**/*Component*',
                       '**/*Factory.*',
                       '**/*ViewModel.*',
                       '**/TimberL.*',
                       '**/*Extensions*.*',
            ])

    def coverageSourceDirs = [
            "src/main/kotlin"
    ]
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("${project.buildDir}/jacoco/testDebugUnitTest.exec")

    reports {
        xml.enabled = true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled = true
        html.destination file("${buildDir}/reports/jacoco/html")
    }
}